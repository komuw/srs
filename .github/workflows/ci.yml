# DOCS: https://help.github.com/en/articles/workflow-syntax-for-github-actions

name: srs ci
on: [pull_request, push]

jobs:
  test:

    name: test
    timeout-minutes: 5
    strategy:
      matrix:
        go-version: [1.13]
        platform: [ubuntu-18.04, macos-latest] # macos-latest, windows-latest
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - name: run srs
        run: |
          go build --race -o srs cmd/main.go
          ./srs -v

      - name: install tools
        run: |
          wget -nc --directory-prefix=/tmp https://github.com/myitcv/gobin/releases/download/$GOBIN_VERSION/linux-amd64
          mv /tmp/linux-amd64 /tmp/gobin
          chmod +x /tmp/gobin
          /tmp/gobin honnef.co/go/tools/cmd/staticcheck@$STATICCHECK_VERSION
        env:
          GOBIN_VERSION: 'v0.0.11'
          STATICCHECK_VERSION: '2019.2.3'

      - name: static analysis
        run: |
          go vet -v -all ./...
          /home/runner/go/bin/staticcheck -tests -show-ignored -go 1.13 -unused.whole-program ./...

      - name: tests and benchmarks
        run: |
          go test -timeout 1m -race -cover -v ./...
          go test -timeout 1m -race -run=XXXX -bench=. ./...

      - name: codecov
        run: |
          go test -timeout 1m -v -race -cover -coverprofile=coverage.txt ./... && \
          bash <(curl -s https://codecov.io/bash)

  deploy:
    name: deploy
    runs-on: ubuntu-18.04
    timeout-minutes: 5
    needs: [ test]
    steps:
      - name: Set up Go 1.13
        if: github.ref == 'refs/heads/master'
        uses: actions/setup-go@v1
        with:
          go-version: 1.13

      - name: Check out code into the Go module directory
        if: github.ref == 'refs/heads/master'
        uses: actions/checkout@v1

      - name: install apt and pip deps
        if: github.ref == 'refs/heads/master'
        run: |
          pwd; ls -lsha
          sudo apt-get -y update
          sudo apt -y install \
                      wget \
                      git

      - name: install go releaser
        if: github.ref == 'refs/heads/master'
        run: |
          wget --directory-prefix=/tmp https://github.com/goreleaser/goreleaser/releases/download/$GORELEASER_VERSION/goreleaser_Linux_x86_64.tar.gz
          tar -C /tmp -xzf /tmp/goreleaser_Linux_x86_64.tar.gz
          chmod +x /tmp/goreleaser
        env:
          GORELEASER_VERSION: 'v0.117.1'

      - name: do new release
        if: github.ref == 'refs/heads/master'
        run: |
          echo 'deploying with goreleaser'
          source /etc/profile
          /tmp/goreleaser --rm-dist --config=.goreleaser.yml --debug --skip-validate --skip-sign --release-notes=.github/RELEASE_NOTES.md

